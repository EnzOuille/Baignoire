{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home TP2 : Baignoire Description Ce projet s'intitule Baignoire . Son but est d'\u00eatre une simulation de remplissage et de fuite d'une baignoire. A l'aide de diff\u00e9rents informations pr\u00e9cis\u00e9es par l'utilisateur, l'application pourra simuler le remplissage et la fuite d'une baignoire. Librairies Plusieurs librairies ont permis \u00e0 ce projet de voir le jour. OpenJFX : JavaFX Controls OpenJFX : JavaFX FXML Description Technique Ce projet est un projet Java Maven, cod\u00e9 enti\u00e8rement sur Intellij avec l'utilisation de SceneBuilder pour la construction des diff\u00e9rentes interface graphiques. Auteur Enzo Cisternino (M1-MIAGE-Alternant)","title":"Home"},{"location":"#home","text":"","title":"Home"},{"location":"#tp2-baignoire","text":"","title":"TP2 : Baignoire"},{"location":"#description","text":"Ce projet s'intitule Baignoire . Son but est d'\u00eatre une simulation de remplissage et de fuite d'une baignoire. A l'aide de diff\u00e9rents informations pr\u00e9cis\u00e9es par l'utilisateur, l'application pourra simuler le remplissage et la fuite d'une baignoire.","title":"Description"},{"location":"#librairies","text":"Plusieurs librairies ont permis \u00e0 ce projet de voir le jour. OpenJFX : JavaFX Controls OpenJFX : JavaFX FXML","title":"Librairies"},{"location":"#description-technique","text":"Ce projet est un projet Java Maven, cod\u00e9 enti\u00e8rement sur Intellij avec l'utilisation de SceneBuilder pour la construction des diff\u00e9rentes interface graphiques.","title":"Description Technique"},{"location":"#auteur","text":"Enzo Cisternino (M1-MIAGE-Alternant)","title":"Auteur"},{"location":"choices/","text":"Choices Description Dans cette partie je d\u00e9crirais les choix que j'ai fait lors du d\u00e9veloppement de l'application. Conception de l'interface Afin de construire l'interface, j'ai d\u00e9cid\u00e9 de s\u00e9parer l'application en trois parties : Le formulaire et les champs dans la partie du haut La \"simulation\" au milieu de l'application La console / logs en bas de l'application. Le formulaire est cr\u00e9\u00e9 dans un grid pane, avec deux textFields pour le volume de la baignoire et le d\u00e9bit de remplissage, un spinner pour choisir le nombre de trous, et des textFields dans un flowPane pour ajouter le d\u00e9bit de chaque trou. Pour la \"simulation\", j'ai utilis\u00e9 un AnchorPane qui m'a permis de positionner facilement mes \u00e9l\u00e9ments via SceneBuilder. J'ai ajout\u00e9 quelques formes pour cr\u00e9er le robinet, et la mod\u00e9lisation des trous, de la baignoire et du remplissage s'est faite via une barre de progression que j'actualise \u00e0 l'aide d'un Service. Pour la console j'ai d\u00e9cid\u00e9 d'utiliser un simple textArea me permettant de pouvoir afficher des informations. La conception d'objets Pour la partie conception d'objets, j'ai utilis\u00e9 trois objets pour ma simulation : - Baignoire - Robinet - Trou La classe baignoire poss\u00e8de toutes les fonctionnalit\u00e9s de remplissage, d'ajout d'eau, de cr\u00e9ations de trous etc.... Elle poss\u00e8de notamment en attributs : son volume total, son volume actuel, sa consommation totale d'eau, l'eau qui a d\u00e9bord\u00e9e, l'eau qui a fuit\u00e9e... Elle poss\u00e8de aussi une liste de trous qui correspondent aux fuites de la baignoire. Elle poss\u00e8de aussi un robinet afin d'avoir l'information sur le remplissage de la baignoire La classe robinet et la classe trou sont sensiblement les m\u00eames, elles ne contiennent qu'un attribut correspondant \u00e0 leur valeur. Les choix et les principes de parall\u00e9lisations des t\u00e2ches Afin de parall\u00e9liser la simulation, j'ai d\u00e9cid\u00e9 d'utiliser les services \"UnscheduledService\", vus en cours. J'en ai notamment trois : - FuiteService - ProgressService - RemplissageService FuiteService s'occupe des fuites et appelle la fonction viderBaignoire de l'objet Baignoire, le service retourne le volume actuel de la baignoire. ProgressService permet simplement d'actualiser la progression des barres de progression afin de faire une animation de fuite d'eau. RemplissageService s'occupe du remplissage de la baignoire avec la fonction augmenterVolume, le service retourne le volume actuel de la baignoire. J'ai pr\u00e9f\u00e9r\u00e9 ce choix de conception \u00e0 la cr\u00e9ation de Runnable dans une pool car je trouvais cette conception plus propre et plus simple \u00e0 comprendre. Les deux services en lien avec la simulation s'effectue toutes les deux secondes, le service pour les barres de progression s'effectue toutes les 100 millisecondes.","title":"Choices"},{"location":"choices/#choices","text":"","title":"Choices"},{"location":"choices/#description","text":"Dans cette partie je d\u00e9crirais les choix que j'ai fait lors du d\u00e9veloppement de l'application.","title":"Description"},{"location":"choices/#conception-de-linterface","text":"Afin de construire l'interface, j'ai d\u00e9cid\u00e9 de s\u00e9parer l'application en trois parties : Le formulaire et les champs dans la partie du haut La \"simulation\" au milieu de l'application La console / logs en bas de l'application. Le formulaire est cr\u00e9\u00e9 dans un grid pane, avec deux textFields pour le volume de la baignoire et le d\u00e9bit de remplissage, un spinner pour choisir le nombre de trous, et des textFields dans un flowPane pour ajouter le d\u00e9bit de chaque trou. Pour la \"simulation\", j'ai utilis\u00e9 un AnchorPane qui m'a permis de positionner facilement mes \u00e9l\u00e9ments via SceneBuilder. J'ai ajout\u00e9 quelques formes pour cr\u00e9er le robinet, et la mod\u00e9lisation des trous, de la baignoire et du remplissage s'est faite via une barre de progression que j'actualise \u00e0 l'aide d'un Service. Pour la console j'ai d\u00e9cid\u00e9 d'utiliser un simple textArea me permettant de pouvoir afficher des informations.","title":"Conception de l'interface"},{"location":"choices/#la-conception-dobjets","text":"Pour la partie conception d'objets, j'ai utilis\u00e9 trois objets pour ma simulation : - Baignoire - Robinet - Trou La classe baignoire poss\u00e8de toutes les fonctionnalit\u00e9s de remplissage, d'ajout d'eau, de cr\u00e9ations de trous etc.... Elle poss\u00e8de notamment en attributs : son volume total, son volume actuel, sa consommation totale d'eau, l'eau qui a d\u00e9bord\u00e9e, l'eau qui a fuit\u00e9e... Elle poss\u00e8de aussi une liste de trous qui correspondent aux fuites de la baignoire. Elle poss\u00e8de aussi un robinet afin d'avoir l'information sur le remplissage de la baignoire La classe robinet et la classe trou sont sensiblement les m\u00eames, elles ne contiennent qu'un attribut correspondant \u00e0 leur valeur.","title":"La conception d'objets"},{"location":"choices/#les-choix-et-les-principes-de-parallelisations-des-taches","text":"Afin de parall\u00e9liser la simulation, j'ai d\u00e9cid\u00e9 d'utiliser les services \"UnscheduledService\", vus en cours. J'en ai notamment trois : - FuiteService - ProgressService - RemplissageService FuiteService s'occupe des fuites et appelle la fonction viderBaignoire de l'objet Baignoire, le service retourne le volume actuel de la baignoire. ProgressService permet simplement d'actualiser la progression des barres de progression afin de faire une animation de fuite d'eau. RemplissageService s'occupe du remplissage de la baignoire avec la fonction augmenterVolume, le service retourne le volume actuel de la baignoire. J'ai pr\u00e9f\u00e9r\u00e9 ce choix de conception \u00e0 la cr\u00e9ation de Runnable dans une pool car je trouvais cette conception plus propre et plus simple \u00e0 comprendre. Les deux services en lien avec la simulation s'effectue toutes les deux secondes, le service pour les barres de progression s'effectue toutes les 100 millisecondes.","title":"Les choix et les principes de parall\u00e9lisations des t\u00e2ches"},{"location":"install/","text":"Install Pr\u00e9requis Il faut avoir Java 11 d'install\u00e9 sur votre machine. Linux and Mac T\u00e9l\u00e9charger l'archive Zip Extraire le contenu de l'archive Se positionner dans le dossier bindist/bin Executer le fichier run Windows T\u00e9l\u00e9charger l'archive Zip Extraire le contenu de l'archive Se positionner dans le dossier bindist/bin Executer le fichier run.bat","title":"Install"},{"location":"install/#install","text":"","title":"Install"},{"location":"install/#prerequis","text":"Il faut avoir Java 11 d'install\u00e9 sur votre machine.","title":"Pr\u00e9requis"},{"location":"install/#linux-and-mac","text":"T\u00e9l\u00e9charger l'archive Zip Extraire le contenu de l'archive Se positionner dans le dossier bindist/bin Executer le fichier run","title":"Linux and Mac"},{"location":"install/#windows","text":"T\u00e9l\u00e9charger l'archive Zip Extraire le contenu de l'archive Se positionner dans le dossier bindist/bin Executer le fichier run.bat","title":"Windows"},{"location":"usage/","text":"Usage Lancement du programme Fournir les donn\u00e9es Afin de pouvoir apporter les informations n\u00e9cessaires \u00e0 la simulation, vous pouvez ajouter le volume total de la baignoire ainsi que le d\u00e9bit du robinet dans les champs destin\u00e9s. Une fois ceci fait vous pouvez choisir le nombre de trous \u00e0 cr\u00e9er, une fois la valeur choisie, de nouveaux champs appara\u00eetrons avec les d\u00e9bits des trous \u00e0 remplir. Si vous saissisez des valeurs non correctes, l'application vous recommandera de resaisir vos valeurs. Lancement de la simulation Si vous souhaitez lancer la simulation une fois que vous avez remplis les champs il suffit d'appuyer sur le bouton \"lancer la simulation\". Stopper l'application Si vous souhaitez arr\u00eater l'application, il suffit d'appuyer sur \"Arr\u00eater la simulation\" et ainsi les informations finales de la simulation appara\u00eetront tout en bas de l'application.","title":"Usage"},{"location":"usage/#usage","text":"","title":"Usage"},{"location":"usage/#lancement-du-programme","text":"","title":"Lancement du programme"},{"location":"usage/#fournir-les-donnees","text":"Afin de pouvoir apporter les informations n\u00e9cessaires \u00e0 la simulation, vous pouvez ajouter le volume total de la baignoire ainsi que le d\u00e9bit du robinet dans les champs destin\u00e9s. Une fois ceci fait vous pouvez choisir le nombre de trous \u00e0 cr\u00e9er, une fois la valeur choisie, de nouveaux champs appara\u00eetrons avec les d\u00e9bits des trous \u00e0 remplir. Si vous saissisez des valeurs non correctes, l'application vous recommandera de resaisir vos valeurs.","title":"Fournir les donn\u00e9es"},{"location":"usage/#lancement-de-la-simulation","text":"Si vous souhaitez lancer la simulation une fois que vous avez remplis les champs il suffit d'appuyer sur le bouton \"lancer la simulation\".","title":"Lancement de la simulation"},{"location":"usage/#stopper-lapplication","text":"Si vous souhaitez arr\u00eater l'application, il suffit d'appuyer sur \"Arr\u00eater la simulation\" et ainsi les informations finales de la simulation appara\u00eetront tout en bas de l'application.","title":"Stopper l'application"}]}